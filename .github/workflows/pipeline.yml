name: Proxmox Automation Pipeline

on:
  workflow_dispatch:
    inputs:
      os_image:
        description: "Operating system image to use"
        required: true
        default: "ubuntu22"
        type: choice
        options:
          - ubuntu22
          - rocky9
      vm_ip:
        description: "IP address for the VM"
        required: true
        default: 192.168.1.171
        type: number
      vm_cores:
        description: "Number of CPU cores for the VM"
        required: true
        default: 2
        type: number
      vm_memory:
        description: "Amount of RAM for the VM in MB"
        required: true
        default: 2048
        type: number
      vm_disk_size:
        description: "Disk size for the VM"
        required: true
        default: "32G"
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy repository to server
        run: scp -r ./* user@{{ secrets.ANSIBLE_TERRAFORM_SERVER }}:/home/user/proxmox-automation

      - name: SSH to server and run Terraform
        run: |
          ssh user@{{ secrets.ANSIBLE_TERRAFORM_SERVER }} <<EOF
          cd /home/user/proxmox-automation/terraform
          terraform init
          terraform apply -auto-approve \
            -var pm_api_url=${{ secrets.PM_API_URL }} \
            -var pm_user=${{ secrets.PM_USER }} \
            -var pm_password=${{ secrets.PM_PASSWORD }} \
            -var vm_name="vm-${{ github.run_id }}" \
            -var target_node=${{ secrets.TARGET_NODE }} \
            -var storage=${{ secrets.STORAGE }} \
            -var vm_cores=${{ github.event.inputs.vm_cores }} \
            -var vm_memory=${{ github.event.inputs.vm_memory }} \
            -var vm_disk_size=${{ github.event.inputs.vm_disk_size }} \
            -var network_bridge=${{ secrets.NETWORK_BRIDGE }} \
            -var clone_template=${{ secrets.CLONE_TEMPLATE }} \
            -var ssh_key_path=${{ secrets.SSH_KEY_PATH }} \
            -var vm_ip=${{ github.event.inputs.vm_ip }} \
            -var os_image=${{ github.event.inputs.os_image }}
          EOF

      - name: SSH to server and run Ansible
        run: |
          ssh user@{{ secrets.ANSIBLE_TERRAFORM_SERVER }} <<EOF
          cd /home/user/proxmox-automation
          echo "[all]" > ansible/inventory.ini
          echo "vm ansible_host=${{ github.event.inputs.vm_ip }}" >> ansible/inventory.ini
          echo "[all:vars]" >> ansible/inventory.ini
          echo "ansible_user=deploy" >> ansible/inventory.ini
          echo "ansible_ssh_private_key_file=/home/user/.ssh/id_rsa" >> ansible/inventory.ini
          ansible-playbook -i ansible/inventory.ini ansible/site.yml
          EOF
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'False'
          USER_NAME: ${{ secrets.USER_NAME }}
