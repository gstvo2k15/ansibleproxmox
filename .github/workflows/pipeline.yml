name: Proxmox Automation Pipeline

on:
  workflow_dispatch:
    inputs:
      os_image:
        description: "Operating system image to use"
        required: true
        default: "ubuntu22"
        type: choice
        options:
          - ubuntu22
          - rocky9

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Install SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform
        id: apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_pm_api_url: ${{ secrets.PM_API_URL }}
          TF_VAR_pm_user: ${{ secrets.PM_USER }}
          TF_VAR_pm_password: ${{ secrets.PM_PASSWORD }}
          TF_VAR_vm_count: ${{ secrets.VM_COUNT }}
          TF_VAR_target_node: ${{ secrets.TARGET_NODE }}
          TF_VAR_storage: ${{ secrets.STORAGE }}
          TF_VAR_vm_cores: ${{ secrets.VM_CORES }}
          TF_VAR_vm_memory: ${{ secrets.VM_MEMORY }}
          TF_VAR_vm_disk_size: ${{ secrets.VM_DISK_SIZE }}
          TF_VAR_network_bridge: ${{ secrets.NETWORK_BRIDGE }}
          TF_VAR_gateway: ${{ secrets.GATEWAY }}
          TF_VAR_clone_template: ${{ secrets.CLONE_TEMPLATE }}
          TF_VAR_ssh_key_path: ${{ secrets.SSH_KEY_PATH }}
          TF_VAR_vm_ips: ${{ fromJson(secrets.VM_IPS) | join(",") }}
          TF_VAR_os_image: ${{ github.event.inputs.os_image }}

  ansible:
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install Ansible
        run: sudo apt update && sudo apt install -y ansible

      - name: Run Ansible Playbook
        run: |
          echo "[all]" > ansible/inventory.ini
          for ip in ${{ fromJson(secrets.VM_IPS) }}; do
            echo "vm ansible_host=$ip" >> ansible/inventory.ini
          done
          echo "[all:vars]" >> ansible/inventory.ini
          echo "ansible_user=deploy" >> ansible/inventory.ini
          echo "ansible_ssh_private_key_file=~/.ssh/github_actions" >> ansible/inventory.ini
          ansible-playbook -i ansible/inventory.ini ansible/site.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'False'
          USER_NAME: ${{ secrets.USER_NAME }}
